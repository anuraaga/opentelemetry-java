plugins {
    id "java-library"
    id "maven-publish"

    id "org.unbroken-dome.test-sets"
    id "ru.vyarus.animalsniffer"
}

description = 'OpenTelemetry SDK Auto-configuration'
ext.moduleName = "io.opentelemetry.sdk.autoconfigure"

testSets {
    testFullConfig
}

dependencies {
    api project(':sdk:all'),
            project(':sdk:metrics')

    implementation project(':extensions:trace-propagators')

    compileOnly project(':exporters:jaeger')
    compileOnly project(':exporters:jaeger-thrift')
    compileOnly project(':exporters:logging')
    compileOnly project(':exporters:otlp:all')
    compileOnly project(':exporters:otlp:metrics')
    compileOnly project(':exporters:prometheus')
    compileOnly libraries.prometheus_client_httpserver
    compileOnly project(':exporters:zipkin')

    testImplementation project(':proto'),
            'com.linecorp.armeria:armeria-junit5',
            'com.linecorp.armeria:armeria-grpc'
    testRuntimeOnly 'io.grpc:grpc-netty-shaded'

    testFullConfigImplementation project(':exporters:jaeger')
    testFullConfigImplementation project(':exporters:jaeger-thrift')
    testFullConfigImplementation project(':exporters:logging')
    testFullConfigImplementation project(':exporters:otlp:all')
    testFullConfigImplementation project(':exporters:otlp:metrics')
    testFullConfigImplementation project(':exporters:prometheus')
    testFullConfigImplementation libraries.prometheus_client_httpserver
    testFullConfigImplementation project(':exporters:zipkin')
}

testFullConfig {
    environment("OTEL_RESOURCE_ATTRIBUTES", "service.name=test,cat=meow")
    environment("OTEL_EXPORTER", "otlp,jaeger,zipkin")
    environment("OTEL_PROPAGATORS", "tracecontext,baggage,b3,b3multi,jaeger,ottracer,xray")
    environment("OTEL_BSP_SCHEDULE_DELAY", "10")
    environment("OTEL_IMR_EXPORT_INTERVAL", "10")
    environment("OTEL_EXPORTER_OTLP_HEADERS", "cat=meow,dog=bark")
    environment("OTEL_EXPORTER_OTLP_TIMEOUT", "5000")
}